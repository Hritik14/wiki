<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The M47r1x</title>
    <link>/posts/</link>
    <description>Recent content in Posts on The M47r1x</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>(c) Zion</copyright>
    <lastBuildDate>Mon, 17 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Loading and probing of USB device drivers</title>
      <link>/posts/driver-loading-and-binding/</link>
      <pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/driver-loading-and-binding/</guid>
      <description>The Linux USB driver expects a probe function which is called when a matching device is plugged in.
 When a device is plugged into the USB bus that matches the device ID pattern that your driver registered with the USB core, the probe function is called.
 Device operation   Following are some questions that have appeared on the internet time and again.
When will probe function be called ?</description>
    </item>
    
    <item>
      <title>Manually booting the Linux kernel inside QEMU</title>
      <link>/posts/linux-boot/</link>
      <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux-boot/</guid>
      <description>Shivering in this cold winter one would certainly stumble upon the question that the Linux Kernel, which operates most of your operating system, is just a huge C program.
Shouldn&amp;rsquo;t it, then, be possible to compile and run it as you do to all your C programs ?
Here, I&amp;rsquo;d be using the famous qemu emulator to run a pre compiled linux kernel. So, let&amp;rsquo;s begin.
Theory We all hate this part but it deserves its position.</description>
    </item>
    
    <item>
      <title>Grayhat -&gt; Secarmy CTF :: The Unintended Way</title>
      <link>/posts/secarmy-unintended-ctf/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/secarmy-unintended-ctf/</guid>
      <description>Once upon a time, a CTF was held. There were many ways to solve it, though none knew that one was The Unintended Way. Although, it does sound pretty unconventional and sad that in a CTF where you explore all the paths and explore wild possibilities, one of them was tagged as unintended and thus, invalid.
Without further ado, let&amp;rsquo;s discover what it was.
The CTF The CTF was hosted on vulnhub, you were provided with an ova virtualbox image.</description>
    </item>
    
    <item>
      <title>Multiple connections - Faster internet ?</title>
      <link>/posts/multi-net/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/multi-net/</guid>
      <description>Neo, we must find a faster link, connection to the Matrix is congested. Hurry !
 Kernel supports a magical module, called bonding
 Bonding: methods of combining (aggregating) multiple network connections in parallel in order to increase throughput
 This seems to be exactly what I need. I&amp;rsquo;ve two ISPs , let&amp;rsquo;s go ahead and connect two of my android devices via USB Tethering and bond both the connections and enter into the matrix!</description>
    </item>
    
  </channel>
</rss>
